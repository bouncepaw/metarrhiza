Learn what fields you can include in your [[configuration]] files.

Some fields are marked with //Since x.y//. It means they have been introduced or will be introduced in the given release.

= Root section
* `WikiName`: //string//. The name your wiki has. It is shown in the header by default and in other places. **Default:** `Mycorrhiza Wiki`.
* `NaviTitleIcon`: //string//. The icon shown before the colon in the navigational titles above each hypha. You may want to use an emoji or HTML here. **Default:** `üçÑ` (mushroom emoji).
* `UseSiblingHyphaeSidebar`: //boolean//. Whether to show the sibling hyphae sidebar. You are discouraged from using the sibling hyphae sidebar on new wikis. Enable it on old wikis that depend on it heavily. **Default:** `false`. //Since [[release/1.9 | 1.9]]

= [Hyphae]
* `HomeHypha`: //string//. The name your home hypha has. **Default:** `home`.
* `UserHypha`: //string//. The name of the hypha that is parent of all user hyphae. **Default:** `u`.
* `HeaderLinkHypha`: //string//. The name of the hypha where you can [[../header | configure]] the header. There is no default.

= [Network]
* `ListenAddr`: //string//. Address on which Mycorrhiza will listen for requests. **Default:** `127.0.0.1:1737`. //Since [[release/1.3 | 1.3]]//
* `URL`: //url//. What URL is used for [[opengraph | Open Graph]] generation and web feeds. There is no default.
* ~~`HTTPPort`: //number//. What port is used for serving the web interface of Mycorrhiza. **Default:** `1737`.~~ //Removed in [[release/1.3 | 1.3]]//
* ~~`GeminiCertificatePath`: //path//. Where do you store your Gemini certificate. There is no default.~~ //Removed in [[release/1.2 | 1.2]]//

= [Authorization]
* `UseAuth`: //boolean//. Whether to use [[feature/authorization | authorization]]. **Default:** false
* `AllowRegistration`: //boolean//. Whether you want unregistered visitors to be able to register themselves using the web form. **Default:** `false`. //Since 1.1//
* `RegistrationLimit`: //number//. There cannot be more registered users than this number. If the number is zero, there is no limit. Makes sense only when `UseRegistration` is `true`. **Default:** `0`. //Since 1.1//
* `Locked`: //boolean//. Whether the users have to authorize first to access the wiki. **Default:** `false`.
* `UseWhiteList`: //boolean//. Whether to use a whitelist to allow specific users in. **Default:** `false`.
* `WhiteList`: //list of strings//. Usernames of people to allow in, if `UseWhiteList` is turned on. **Default:** `[]`.
* ~~`UseFixedAuth`: //boolean//. Whether you want to use [[feature/authorization#Fixed_authorization | fixed authorization]]. **Default:** `false`.~~ //Removed in 1.3//
* ~~`FixedAuthCredentialsPath`: //path//. Where do you want to store your fixed credentials json file. Only makes sense when `UseFixedAuth` is `true`. There is no default.~~ //Removed in 1.2//
* ~~`RegistrationCredentialsPath`: //path//. Where do you want to store users' encrypted credentials. You are not meant to edit that file by hand, by the way. There is no default. //Since 1.1//~~ //Removed in 1.2//

= [CustomScripts] //Since [[release/1.2 | 1.2]]//
You can specify URLs of JavaScript files you want to load.
* `CommonScripts`: //list of urls//. Comma-separated list of unquoted URLs to JS files to load on //all// pages.
* `ViewScripts`: //list of urls//. Comma-separated list of unquoted URLs to JS files to load on //view// pages: `/hypha`, `/rev`.
* `EditScripts`: //list of urls//. Comma-separated list of unquoted URLs to JS files to load on the `/edit` page.

= [Telegram]
You can set up Telegram-based authorization. You have to define both parameters.
* `TelegramBotToken`: //string// Token of your bot. There is no default.
* `TelegramBotName`: //string// Username of your bot, sans @. There is no default.